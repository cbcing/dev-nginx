
##### nginx default config

#Nginx用户及组，windows下不用指定。
user nginx;
#工作进程：数目。根据硬件进行调整，通常等于CPU数量或者2倍于CPU。
worker_processes 1;

#错误日志，存储路径。
error_log  /var/log/nginx/error.log warn;
#pid存储路径。
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
# 
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
# 
#     access_log  /var/log/nginx/access.log  main;
# 
#     sendfile        on;
#     #tcp_nopush     on;
# 
#     keepalive_timeout  65;
# 
#     #gzip  on;
# 
#     include /etc/nginx/conf.d/*.conf;
# 
# }


##### my config
#daemon off;

# worker_processes 1;

events { 
    #单个进程最大连接数（最大连接数=连接数*进程数）
    #根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。
    worker_connections 1024; 

    #keepalive超时时间。
    keepalive_timeout 60;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持。
http {

    sendfile on;

    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # List of application servers
    upstream product_api_servers {

        # server products.cloud66.local:4567;
        server 192.168.1.125:32773

    }

    # List of application servers
    upstream inventory_api_servers {

        # server inventory.cloud66.local:8080;
        server 192.168.1.125:32773

    }

    # Configuration for the server
    #虚拟主机的配置
    server {

        # Running port
        #监听端口
        listen 80;

        # Proxying the Products API
        #对 "/products" 启用反向代理
        location /products {

            # proxy_pass         http://product_api_servers;
            proxy_pass         http://service-provider-one
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            

        }

        # Proxying the connections connections
        location /product_quantities {

            # proxy_pass         http://inventory_api_servers;
            prozy_pass         http://service-provider-one
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

        }
    }
}
